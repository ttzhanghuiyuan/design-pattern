# 定义


原型模式（Prototype Pattern）是一种创建型设计模式，它用于创建对象的复制（克隆），而不是通过构造函数创建新的对象实例。原型模式通过复制现有对象的原型（或者称为原型实例）来创建新的对象，从而避免了昂贵的对象创建操作。

# 结构

* 原型接口（Prototype）：声明一个克隆自身的方法。
* 具体原型（ConcretePrototype）：实现原型接口，实现克隆自身的方法。
* 客户端（Client）：通过复制原型对象来创建新的对象。

# 注意事项

* 浅克隆与深克隆：默认的clone()方法是浅克隆，只复制对象的基本数据类型字段。如果对象中有引用类型字段，那么这些字段仍然指向原始对象的引用。为了实现深克隆，需要在clone()方法中对引用类型字段也进行复制。
* 原型注册表：为了方便管理和获取原型对象，可以使用原型注册表（Prototype Registry）来存储和管理原型对象。
* 克隆代价：虽然原型模式避免了使用构造函数创建新对象的代价，但克隆操作也可能会消耗一定的系统资源，特别是在需要复制大对象或者复杂对象时。