# 迭代器模式

# 定义

迭代器模式（Iterator Pattern）是一种行为型设计模式，它提供一种方法来访问一个聚合对象中各个元素，而不需要暴露该对象的内部表示。通过迭代器模式，我们可以遍历一个聚合对象的元素，而无需关心该对象的内部结构。

# 结构

* 迭代器（Iterator）：定义了访问和遍历元素的接口。
* 具体迭代器（ConcreteIterator）：实现迭代器接口，对聚合对象进行遍历。
* 聚合（Aggregate）：定义创建相应迭代器对象的接口。
* 具体聚合（ConcreteAggregate）：实现聚合接口，返回一个相应的迭代器对象。
* 客户端（Client）：使用迭代器模式的客户端代码。

# 优点

* 简化集合访问：迭代器模式提供了一种统一的方法来访问集合中的元素，简化了集合的访问。
* 解耦：迭代器模式将集合的遍历算法和集合本身解耦，使得集合可以独立变化。

# 注意事项

* 性能问题：在使用迭代器模式时，需要注意性能问题，尤其是对于复杂的集合结构。