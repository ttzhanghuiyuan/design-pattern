# 定义

适配器模式（Adapter Pattern）是一种结构型设计模式，用于将一个类的接口转换成客户端所期望的另一个接口。适配器模式可以让原本由于接口不兼容而不能一起工作的类可以一起工作。

# 结构

* 目标接口（Target）：客户端期待的接口。
* 适配者类（Adaptee）：已经存在的接口，但不满足目标接口。
* 适配器类（Adapter）：实现目标接口，并持有一个适配者对象的引用。

# 优点
* 解耦性：适配器模式可以解耦客户端代码和适配者类，使得它们可以独立演化。
* 复用性：适配器可以复用已有的适配者类，无需修改其代码。

# 注意事项
* 设计小心：适配器模式可能导致系统中出现大量的适配器类，设计时需要小心。
* 适用性：适配器模式主要用于复用已存在的类，而不是重新设计一个符合目标接口的新类。